name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-build-scan-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      # 1. Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      # 3. Cache Node Modules
      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install dependencies
      - name: Install Dependencies
        run: npm install

      # 5. Build React App
      - name: Build React App
        run: npm run build

      # 6. Run SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: frontend
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FRONTEND }}
            -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }}
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

      # 7. Run Snyk Security Scan
      - name: Snyk Scan
        uses: snyk/actions/node@v4
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test

      # 8. Run Trivy Filesystem Scan
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './frontend'
          format: 'table'

      # 9. Docker Login
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10. Build & Push Docker Image
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_NAME }}:latest


